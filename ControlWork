#include <fcntl.h>           /* Подключаемые файлы */
#include <io.h>             /* Подключаемые файлы */
#include <stdlib.h>        /* Подключаемые файлы */
#include <stdio.h>        /* Подключаемые файлы */
#include <share.h>       /* Подключаемые файлы */
#include <iostream>     /* Подключаемые файлы */
#include <locale.h>    /* Подключаемые файлы */
using namespace std; //Использование стандартного пространства имён
char buffer[1024];//Установка размера буфера, куда будут записываться считанные байты. Максимум 60000
// Начало программы
int main(void)
{
    setlocale(LC_ALL, "Russian"); //подключение русского языка
    int fh, bytesread, allbr=0; 
    /*
    первая переменная - дескриптор файла, ссылающийся на открытый файл
    вторая переменная - переменная для записи количесвта прочитанных байт
    третья переменная - переменная для записи всех прочитанных байт
    */
    unsigned int nbytes = 1024;//максимальное число байт для чтения
    char st[256];//для записи пути к файлу из которого будем считывать байты
    cout << "Введите путь к файлу: ";//сообщение пользователю
    cin >> st;// присвоение введённого значения переменной
    /* Открытие файла */
    if (_sopen_s(&fh, st, _O_RDONLY, _SH_DENYNO, 0))
    {
        perror("Неудалось открыть файл");//Вывод сообщения об ошибке, если не удалось открыть файл.
        exit(1);
    }
        /* Чтения файла */
        if ((bytesread = _read(fh, buffer, nbytes)) <= 0) 
            // первое чтение с проверкой условия, инициализируется переменная bytesread
            perror("Неудалось прочитать файл");//сообщение об ошибке, если не удалось прочитать файл
        else  
            do 
            {
                 allbr += bytesread;
                (bytesread = _read(fh, buffer, nbytes));
                 nbytes = 1024;
            } while (bytesread != 0);
            /*
            выполнение цикла do...while(...) 
            пока функция _read не вернёт в переменную byteread значение 0
             1. К переменной allbr прибавляется значение переменной bytesread
             2. Функция _read возвращает значение (количество прочитанных байт либо 0)
             3. Переменной nbytes присваивается значение 1024
             В отсутствии условного оператора пункт 1 и 2 меняются местами, 
             так как инициализация переменной призойдёт только в пункте 2
             Проверка на соответствие условию
            */
    _close(fh);//закрытие файла
    printf("Прочитано %u байт из файла\n", allbr);//вывод количества прочитанных байт
}
